body {
  /* 移动端的最大宽度 */
  max-width: 540px;
  /* 移动端的最小宽度 */
  min-width: 320px;
  /* 默认居中 */
  margin: 0 auto;
  /* 字体 */
  font: normal 14px/1.5 Tahoma, "Lucida Grande", Verdana, "Microsoft Yahei", STXihei, hei;
  /* 字体颜色 */
  color: #000;
  /* 浅灰色的背景 */
  background: #f2f2f2;
  /* 生成内容 会多出一点点 有可能会生成滚动条 */
  overflow-x: hidden;
  /* 鼠标点击的时候 没有蓝颜色的光 */
  -webkit-tap-highlight-color: transparent;
  height: 3000px;
}

/* 因为nomalize连小圆点都没清掉 */
ul {
  list-style: none;
  padding: 0;
  margin: 0;
}

a {
  text-decoration: none;
}

/* 因为怪异盒子模型计算的时候更加舒服 所以直接使用怪异盒子模型 */
* {
  box-sizing: border-box;
}

/* search-index START */
.search-index {
  /* 移动端的最大宽度 */
  max-width: 540px;
  /* 移动端的最小宽度 */
  min-width: 320px;
  height: 44px;
  /* 因为我的是固定 搜索条是弹性的 所以我将这个搜索框整个变成一个容器*/
  display: flex;
  /* 是一个固定定位 因为固定定位脱离文档流 */
  position: fixed;
  top: 0;
  /* 让div左上角这个点居中 */
  left: 50%;
  /* 让div水平居中 但是我又不知道这个盒子到底有多大 那么我就只能采取 translateX 的形式百分比 说的是自身*/
  transform: translateX(-50%);
  background-color: #fff;
  width: 100%;
}

.search-index .search {
  flex: 1;
  height: 44px;
  /* flex */
  display: flex;
  /* 侧轴居中方案 */
  align-items: center;
  position: relative;
}

.search-index .search input {
  border-radius: 8px;
  margin: 0 8px;
  width: 100%;
  height: 24px;
  background-color: #F7F7F7;
  border: 0;
  box-shadow: 2px 2px 4px rgba(0, 0, 0, .2);
  padding-left: 20px;
}

.search-index .search::before {
  /* 伪类一定要提供这个属性 不然啥都显示不出来 */
  content: "";
  /* 还要支持宽高 所以还需要变成块元素*/
  display: block;
  position: absolute;
  left: 12px;
  /*二倍图 实际的面积缩小了四倍 */
  /* 缩放盒子的大小 目前图片是28像素 但是我要显示的是14px 所以 后面的内容 通通除以2 */
  width: 12px;
  height: 12px;
  background-image: url("../image/sprite.png");
  /* 第三步 定位也全部都所有一倍 */
  background-position: -59px -279px;
  /* 第二步 缩放整个图片的宽高 这张背景图片 实际上缩小了4倍 */
  background-size: 104px auto;
  background-color: #F7F7F7;
}


.search-index .user {
  width: 44px;
  height: 44px;
  display: flex;
  flex-direction: column;
  align-items: center;
  color: #4FC7ED;
}

.search-index .user::before {
  content: "";
  display: block;
  width: 24px;
  height: 24px;
  background-image: url("../image/sprite.png");
  background-position: -59px -193px;
  background-size: 104px auto;
}

/* search-index END */

/* img-wrap START*/
.img-wrap {
  margin-top: 65px;
}

.img-wrap img {
  width: 100%;
}

/* img-wrap END*/


/* local-nav START*/
.local-nav {
  display: flex;
  height: 64px;
  margin: 4px;
  border-radius: 8px;
  background-color: #fff;
}

.local-nav li {
  flex: 1;
}

.local-nav li a {
  display: flex;
  flex-direction: column;
  /* x轴居中 侧轴*/
  align-items: center;
}

.local-nav li .local-nav-icon {
  width: 32px;
  height: 32px;
  background-image: url("../image/localnav_bg.png");
  background-size: 32px auto;
  background-position: 0 0;
  margin: 5px;
}

.local-nav li:nth-child(2) .local-nav-icon {
  background-position: 0 -32px;
}

.local-nav li:nth-child(3) .local-nav-icon {
  background-position: 0 -64px;
}

.local-nav li:nth-child(4) .local-nav-icon {
  background-position: 0 -96px;
}

.local-nav li:nth-child(5) .local-nav-icon {
  background-position: 0 -128px;
}

/* local-nav END*/

/* nav START */
.nav {
  /* 虽然他是圆角矩形 但是显示的颜色 是他的子元素 */
  border-radius: 16px;
  /* 隐藏掉子元素的颜色 */
  overflow: hidden;
}

.nav-common {
  height: 88px;
  margin: 3px;
  display: flex;
  background-image: linear-gradient(to right, #FF4D48, #FF9344);
}

.nav-common .nav-items {
  flex: 1;
}

.nav-common .nav-items:nth-child(2) {
  border: 1px solid #fff;
  border-width: 0 1px 0 1px;
}

.nav-items {
  display: flex;
  flex-direction: column;
}

.nav-items a {
  color: white;
  flex: 1;
  text-align: center;
  line-height: 44px;
  text-shadow: 2px 2px 2px rgba(0, 0, 0, .1);
}

/* n 012345 */
.nav-items:nth-child(n+2) a:nth-child(1) {
  border-bottom: 1px solid #fff
}

.nav-items:nth-child(1) a {
  background-image: url("../image/hotel.png");
  background-repeat: no-repeat;
  background-size: 121px auto;
  background-position: 50% 100%;
  /* background-position: 0 -126px;
  background-size: 104px auto;
  background-repeat: no-repeat; */
}

/* .nav-items:nth-child(3) a:nth-child(1) {
  border-bottom: 1px solid #fff
} */

/* nav END*/